{"version":3,"sources":["webpack://aimee/./node_modules/@material-ui/core/esm/useMediaQuery/useMediaQuery.js","webpack://aimee/./src/pages/projects/recordings/index.js"],"names":["useMediaQuery","queryInput","options","arguments","length","undefined","theme","props","name","query","replace","supportMatchMedia","window","matchMedia","_props$options","_props$options$defaul","defaultMatches","_props$options$matchM","_props$options$noSsr","noSsr","_props$options$ssrMat","ssrMatchMedia","_React$useState","matches","match","setMatch","active","queryList","updateMatch","addListener","removeListener","useStyles","makeStyles","container","display","flexDirection","marginBottom","spacing","breakpoints","down","padding","containerRecording","marginTop","title","up","fontWeight","fontSize","imageContainer","image","objectFit","height","width","textAlign","link","textDecoration","classes","useTheme","mediumUp","smallUp","className","recordings","recording","variant","src","noMargin","path","externalLink","external"],"mappings":"+KAGe,SAASA,EAAcC,GACpC,IAAIC,EAAUC,UAAUC,OAAS,QAAsBC,IAAjBF,UAAU,GAAmBA,UAAU,GAAK,GAC9EG,GAAQ,SACRC,GAAQ,OAAc,CACxBD,MAAOA,EACPE,KAAM,mBACND,MAAO,KAST,IAAIE,EAA8B,mBAAfR,EAA4BA,EAAWK,GAASL,EACnEQ,EAAQA,EAAMC,QAAQ,eAAgB,IAKtC,IAAIC,EAAsC,oBAAXC,aAAuD,IAAtBA,OAAOC,WAEnEC,GAAiB,OAAS,GAAIP,EAAOL,GACrCa,EAAwBD,EAAeE,eACvCA,OAA2C,IAA1BD,GAA2CA,EAC5DE,EAAwBH,EAAeD,WACvCA,OAAuC,IAA1BI,EAAmCN,EAAoBC,OAAOC,WAAa,KAAOI,EAC/FC,EAAuBJ,EAAeK,MACtCA,OAAiC,IAAzBD,GAA0CA,EAClDE,EAAwBN,EAAeO,cACvCA,OAA0C,IAA1BD,EAAmC,KAAOA,EAE1DE,EAAkB,YAAe,WACnC,OAAIH,GAASR,EACJE,EAAWJ,GAAOc,QAGvBF,EACKA,EAAcZ,GAAOc,QAKvBP,KAELQ,EAAQF,EAAgB,GACxBG,EAAWH,EAAgB,GAoC/B,OAlCA,aAAgB,WACd,IAAII,GAAS,EAEb,GAAKf,EAAL,CAIA,IAAIgB,EAAYd,EAAWJ,GAEvBmB,EAAc,WAIZF,GACFD,EAASE,EAAUJ,UAMvB,OAFAK,IACAD,EAAUE,YAAYD,GACf,WACLF,GAAS,EACTC,EAAUG,eAAeF,OAE1B,CAACnB,EAAOI,EAAYF,IAUhBa,I,4HC9EHO,GAAYC,QAAW,SAAC1B,GAAD,cAAY,CACvC2B,WAAS,GACPC,QAAS,OACTC,cAAe,SACf,kBAAmB,CACjB,QAAS,CACP,QAAS,CACPC,aAAc9B,EAAM+B,QAAQ,OAN3B,EAUN/B,EAAMgC,YAAYC,KAAK,OAAQ,CAC9BC,QAAS,YACT,kBAAmB,CACjB,QAAS,CACP,QAAS,CACPJ,aAAc9B,EAAM+B,QAAQ,OAf7B,GAwBTI,mBAAoB,CAClBC,UAAWpC,EAAM+B,QAAQ,IAE3BM,OAAK,OACFrC,EAAMgC,YAAYM,GAAG,OAAQ,CAC5BC,WAAY,IACZC,SAAU,OACVJ,UAAWpC,EAAM+B,QAAQ,IAJxB,GAOLU,eAAgB,CACdL,UAAWpC,EAAM+B,QAAQ,IAM3BW,MAAO,CACLC,UAAW,OACXC,OAAQ,IACRC,MAAO,IACPC,UAAW,UAiBbC,KAAM,CACJC,eAAgB,YAChBpB,QAAS,cA0Cb,UAtCmB,SAAC3B,GAClB,IAAMgD,EAAUxB,IACVzB,GAAQkD,SACRC,GAAWzD,OAAcM,EAAMgC,YAAYM,GAAG,OAC9Cc,GAAU1D,OAAcM,EAAMgC,YAAYM,GAAG,OAEnD,OACE,gBAAC,IAAD,KACE,2BACE,uBAAKe,UAAWJ,EAAQtB,WACrB2B,UAAe,SAACC,GACf,OACE,uBAAKF,UAAWJ,EAAQd,oBACtB,gBAAC,IAAD,CACEqB,QAASJ,GAAiBD,EAAP,KAAyB,aAE3CI,EAAUlB,OAEb,uBAAKgB,UAAWJ,EAAQR,gBACtB,uBAAKgB,IAAKF,EAAUb,MAAOW,UAAWJ,EAAQP,SAEhD,gBAAC,IAAD,CACEgB,UAAU,EACVC,KAAMJ,EAAUK,aAChBC,UAAU,EACVR,UAAWJ,EAAQF,MAJrB","file":"component---src-pages-projects-recordings-index-js-d72c42f2735016125be9.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { getThemeProps, useTheme } from '@material-ui/styles';\nexport default function useMediaQuery(queryInput) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var theme = useTheme();\n  var props = getThemeProps({\n    theme: theme,\n    name: 'MuiUseMediaQuery',\n    props: {}\n  });\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof queryInput === 'function' && theme === null) {\n      console.error(['Material-UI: The `query` argument provided is invalid.', 'You are providing a function without a theme in the context.', 'One of the parent elements needs to use a ThemeProvider.'].join('\\n'));\n    }\n  }\n\n  var query = typeof queryInput === 'function' ? queryInput(theme) : queryInput;\n  query = query.replace(/^@media( ?)/m, ''); // Wait for jsdom to support the match media feature.\n  // All the browsers Material-UI support have this built-in.\n  // This defensive check is here for simplicity.\n  // Most of the time, the match media logic isn't central to people tests.\n\n  var supportMatchMedia = typeof window !== 'undefined' && typeof window.matchMedia !== 'undefined';\n\n  var _props$options = _extends({}, props, options),\n      _props$options$defaul = _props$options.defaultMatches,\n      defaultMatches = _props$options$defaul === void 0 ? false : _props$options$defaul,\n      _props$options$matchM = _props$options.matchMedia,\n      matchMedia = _props$options$matchM === void 0 ? supportMatchMedia ? window.matchMedia : null : _props$options$matchM,\n      _props$options$noSsr = _props$options.noSsr,\n      noSsr = _props$options$noSsr === void 0 ? false : _props$options$noSsr,\n      _props$options$ssrMat = _props$options.ssrMatchMedia,\n      ssrMatchMedia = _props$options$ssrMat === void 0 ? null : _props$options$ssrMat;\n\n  var _React$useState = React.useState(function () {\n    if (noSsr && supportMatchMedia) {\n      return matchMedia(query).matches;\n    }\n\n    if (ssrMatchMedia) {\n      return ssrMatchMedia(query).matches;\n    } // Once the component is mounted, we rely on the\n    // event listeners to return the correct matches value.\n\n\n    return defaultMatches;\n  }),\n      match = _React$useState[0],\n      setMatch = _React$useState[1];\n\n  React.useEffect(function () {\n    var active = true;\n\n    if (!supportMatchMedia) {\n      return undefined;\n    }\n\n    var queryList = matchMedia(query);\n\n    var updateMatch = function updateMatch() {\n      // Workaround Safari wrong implementation of matchMedia\n      // TODO can we remove it?\n      // https://github.com/mui-org/material-ui/pull/17315#issuecomment-528286677\n      if (active) {\n        setMatch(queryList.matches);\n      }\n    };\n\n    updateMatch();\n    queryList.addListener(updateMatch);\n    return function () {\n      active = false;\n      queryList.removeListener(updateMatch);\n    };\n  }, [query, matchMedia, supportMatchMedia]);\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useDebugValue({\n      query: query,\n      match: match\n    });\n  }\n\n  return match;\n}","import * as React from 'react';\nimport Layout from '../../../components/Layout/Layout';\nimport { recordings } from '../../../components/Projects/ProjectsData';\nimport Typography from '../../../components/Typography/Typography';\nimport Link from '../../../components/Link/Link';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    '& > :last-child': {\n      '& > p': {\n        '& > a': {\n          marginBottom: theme.spacing(3),\n        },\n      },\n    },\n    [theme.breakpoints.down('sm')]: {\n      padding: ' 0px 16px',\n      '& > :last-child': {\n        '& > p': {\n          '& > a': {\n            marginBottom: theme.spacing(8),\n          },\n        },\n      },\n    },\n\n    // marginTop: theme.spacing(3),\n    // alignItems: 'center',\n  },\n  containerRecording: {\n    marginTop: theme.spacing(3),\n  },\n  title: {\n    [theme.breakpoints.up('md')]: {\n      fontWeight: 600,\n      fontSize: '2rem',\n      marginTop: theme.spacing(2),\n    },\n  },\n  imageContainer: {\n    marginTop: theme.spacing(1),\n    // width: 300,\n    // position: 'relative',\n    // paddingTop: '56.25%' /* 720 / 1280 = 0.5625 */,\n    // width: '100%',\n  },\n  image: {\n    objectFit: 'fill',\n    height: 200,\n    width: 200,\n    textAlign: 'center',\n    // position: 'absolute',\n    // top: 0,\n    // left: 0,\n    // width: '100% !important',\n    // height: '100% !important',\n    // objectFit: 'contain',\n    // [theme.breakpoints.down('sm')]: {\n    //   width: '100%',\n    // },\n    // [theme.breakpoints.up('sm')]: {\n    //   maxWidth: '100%',\n    //   objectFit: 'contain',\n    //   marginTop: theme.spacing(2),\n    //   // padding: '0px 2px',\n    // },\n  },\n  link: {\n    textDecoration: 'underline',\n    display: 'inline',\n  },\n}));\n\nconst Recordings = (props) => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const mediumUp = useMediaQuery(theme.breakpoints.up('md'));\n  const smallUp = useMediaQuery(theme.breakpoints.up('sm'));\n\n  return (\n    <Layout>\n      <div>\n        <div className={classes.container}>\n          {recordings.map((recording) => {\n            return (\n              <div className={classes.containerRecording}>\n                <Typography\n                  variant={smallUp ? 'h6' : mediumUp ? 'h6' : 'subtitle1'}\n                >\n                  {recording.title}\n                </Typography>\n                <div className={classes.imageContainer}>\n                  <img src={recording.image} className={classes.image} />\n                </div>\n                <Link\n                  noMargin={true}\n                  path={recording.externalLink}\n                  external={true}\n                  className={classes.link}\n                >\n                  Listen to the recording here\n                </Link>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nexport default Recordings;\n"],"sourceRoot":""}